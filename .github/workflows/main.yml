name: Build and Artifact the ESP-IDF Project

permissions:
  contents: write

on:
  push:
    tags:
     - '*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - name: Generate unique name
      id: generate_name
      run: |
        UNIQUE_NAME="release-$(date +%Y-%m-%d-%H-%M-%S)"
        echo "UNIQUE_NAME=$UNIQUE_NAME" >> $GITHUB_ENV
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}-${{ env.UNIQUE_NAME }}
        release_name: ${{ env.UNIQUE_NAME }}
        draft: false
        prerelease: false
    - name: esp-idf build
      uses: espressif/esp-idf-ci-action@v1
      with:
        esp_idf_version: v4.4
        target: esp32
        path: './'
        command: 'idf.py set-target esp32 && idf.py build'
    - name: Zip firmware files
      uses: montudor/action-zip@v0.1.1
      with:
        args: zip -j firmware_can485.zip ./build/bootloader/bootloader.bin ./build/partition_table/partition-table.bin ./build/ota_data_initial.bin ./build/wican-fw_v171_hv300.bin
    - name: Upload Firmware ZIP Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./firmware_can485.zip
        asset_name: firmware_can485.zip
        asset_content_type: application/zip
